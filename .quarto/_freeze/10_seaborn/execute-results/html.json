{
  "hash": "27d8a2308415a02d9fa2a70320451553",
  "result": {
    "engine": "jupyter",
    "markdown": "---\njupyter: python3\n---\n\n\n\n\n<h1>10. Seaborn</h1>\n<br>\n\n## 10.1. Seaborn\n+ Seaborn\n  + Matplotlib 라이브러리를 기반으로 개발된 고급 통계 데이터 시각화 라이브러리\n  + 다양한 테마와 통계 그래프를 지원하며, 시각적으로 세련된 그래프를 쉽게 생성할 수 있음\n  + Matplotlib 라이브러리에 의존하므로, 사용 시 함께 불러와야 함\n\n<br>\n\n+ \\[실습 데이터\\]\n  + 공공데이터포털에서 제공하는 2020년 국민건강보험공단 건강검진 정보\n  + [health_2020.csv](./data/health_2020.csv)\n\n<br>\n\n|변수|설명|\n|:---:|:------------|\n|gender|성별 코드 (남자: 1, 여자: 2)|\n|height|키 (5cm 단위)|\n|weight|몸무기 (5cm 단위)|\n|waist|허리둘레|\n|systolic|수축기 혈압|\n|diastolic|이완기 혈압|\n|cholesterol|총콜레스테롤|\n|HDL|HDL 콜레스테롤|\n|LDL|LDL 콜레스테롤|\n|smoking|흡연 상태 (비흡연: 1, 과거 흡연: 2, 현재 흡연: 3)|\n|drinking|음주 여부 (비음주: 0, 음주: 1)|\n\n<br>\n\n## 10.2. 막대 그래프\n\n::: {#cd411050 .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n```\n:::\n\n\n::: {#b8b24412 .cell execution_count=2}\n``` {.python .cell-code}\n## 실습 데이터 : health_2020 데이터셋\ndata = pd.read_csv('./data/health_2020.csv')\nprint(data.head())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   no  city_code  gender  age_code  height  weight  waist  systolic  \\\n0   1         36       1         9     165      60   72.1       127   \n1   5         41       2        12     155      50   75.2       144   \n2   6         27       1         9     185      85   94.0       114   \n3   7         44       1         9     165      80   93.0       112   \n4   9         41       2        17     150      50   82.0       136   \n\n   diastolic  blood_sugar  cholesterol  triglycerides   HDL  LDL  hemoglobin  \\\n0         79           90          188             58  58.0  118        15.0   \n1         89          110          220            171  53.0  133        12.4   \n2         72           86          234            183  50.0  147        16.4   \n3         73          250          119            265  26.0   40        15.7   \n4         65          104          177             61  63.0  101        13.3   \n\n   serum  smoking  drinking  \n0    1.1        1         0  \n1    0.7        1         0  \n2    1.1        3         1  \n3    0.7        3         1  \n4    0.7        1         0  \n```\n:::\n:::\n\n\n::: {#0b5514c6 .cell execution_count=3}\n``` {.python .cell-code}\n## 라벨 매핑(label mapping)\n# replace() 함수는 명시되지 않은 값을 그대로 유지하지만,\n# map() 함수는 명시되지 않은 값을 NaN으로 처리함\ndata6 = data.copy()\ndata6 = data6.loc[:, ['gender', 'height', 'weight', 'waist', 'drinking', 'smoking']]\ndata6['gender'] = data['gender'].replace({1: 'M', 2: 'F'})\ndata6['drinking'] = data['drinking'].replace({0: 'Non-drinking', 1: 'Drinking'})\ndata6['smoking'] = data['smoking'].replace({1: 'Non-smoking', 2: 'Quit-smoking', 3: 'Smoking'})\nprint(data6.head())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  gender  height  weight  waist      drinking      smoking\n0      M     165      60   72.1  Non-drinking  Non-smoking\n1      F     155      50   75.2  Non-drinking  Non-smoking\n2      M     185      85   94.0      Drinking      Smoking\n3      M     165      80   93.0      Drinking      Smoking\n4      F     150      50   82.0  Non-drinking  Non-smoking\n```\n:::\n:::\n\n\n::: {#923b6d53 .cell execution_count=4}\n``` {.python .cell-code}\n# 성별 음주 여부별 빈도\ndrinking = data6.groupby(['gender', 'drinking'])['drinking'].count()\ndrinking = drinking.to_frame(name='count')\ndrinking = drinking.reset_index()\nprint(drinking)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  gender      drinking  count\n0      F      Drinking    611\n1      F  Non-drinking    888\n2      M      Drinking   1086\n3      M  Non-drinking    415\n```\n:::\n:::\n\n\n::: {#b3705d2e .cell execution_count=5}\n``` {.python .cell-code}\n# 성별 흡연 상태별 빈도\nsmoking = data6.groupby(['gender', 'smoking'])['smoking'].count()\nsmoking = smoking.to_frame(name='count')\nsmoking = smoking.reset_index()\nprint(smoking)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  gender       smoking  count\n0      F   Non-smoking   1422\n1      F  Quit-smoking     45\n2      F       Smoking     32\n3      M   Non-smoking    502\n4      M  Quit-smoking    519\n5      M       Smoking    480\n```\n:::\n:::\n\n\n::: {#0ae6025d .cell execution_count=6}\n``` {.python .cell-code}\n# 막대 그래프1 : 성별에 따른 음주 여부, 흡연 상태 분포\nfig = plt.figure(figsize=(8, 4))\narea1 = fig.add_subplot(1, 2, 1)\narea2 = fig.add_subplot(1, 2, 2)\n\nax1 = sns.barplot(x='gender', y='count', hue='drinking', data=drinking, ax=area1)\nax2 = sns.barplot(x='gender', y='count', hue='smoking', data=smoking, ax=area2)\n\nfig.suptitle('2020 Health Check Drinking & Smoking Type by Gender', fontweight='bold')\narea1.set_title('Drinking Type')\narea2.set_title('Smoking Type')\nplt.tight_layout(rect=[0, 0, 1, 0.99])\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](10_seaborn_files/figure-html/cell-7-output-1.png){width=757 height=379}\n:::\n:::\n\n\n::: {#b48bc0ad .cell execution_count=7}\n``` {.python .cell-code}\n# 성별 흡연 상태별 평균 몸무게\nmean_weight = data6.groupby(['gender', 'smoking'])['weight'].mean()\nmean_weight = mean_weight.to_frame(name='mean')\nmean_weight = mean_weight.reset_index()\nprint(mean_weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  gender       smoking       mean\n0      F   Non-smoking  55.706751\n1      F  Quit-smoking  55.555556\n2      F       Smoking  59.843750\n3      M   Non-smoking  68.914343\n4      M  Quit-smoking  70.337187\n5      M       Smoking  69.052083\n```\n:::\n:::\n\n\n::: {#85468124 .cell execution_count=8}\n``` {.python .cell-code}\n# 막대 그래프2 : 성별과 흡연 상태에 따른 평균 몸무게\nplt.figure(figsize=(5, 3))\nsns.barplot(x='gender', y='mean', hue='smoking', data=mean_weight)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](10_seaborn_files/figure-html/cell-9-output-1.png){width=436 height=282}\n:::\n:::\n\n\n<br>\n\n## 10.3. 히스토그램\n\n::: {#5fa930b2 .cell execution_count=9}\n``` {.python .cell-code}\n# 성별에 따라 데이터 분리\nmaledata = data6.copy()\nmaledata = maledata.loc[maledata['gender']=='M',:]\n\nfemaledata = data6.copy()\nfemaledata = femaledata.loc[femaledata['gender']=='F',:]\n```\n:::\n\n\n::: {#a4543c21 .cell execution_count=10}\n``` {.python .cell-code}\n# 히스토그램1 : 성별에 따른 몸무게 분포\nplt.figure(figsize=(5, 3))\nplt.title('Distribution of Weight')\nsns.histplot(maledata['weight'], bins=8, alpha=0.5, label='Male')\nsns.histplot(femaledata['weight'], bins=8, alpha=0.5, label='Female', color='r')\nplt.xlim(20, 130)\nplt.xlabel('weight')\nplt.ylabel('count')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](10_seaborn_files/figure-html/cell-11-output-1.png){width=444 height=302}\n:::\n:::\n\n\n::: {#5e5c0f6a .cell execution_count=11}\n``` {.python .cell-code}\n# 히스토그램 & 커널 밀도 추정(KDE) : 성별에 따른 허리둘레 분포\nplt.figure(figsize=(5, 3))\nplt.title('Distribution of Waist with KDE')\nsns.histplot(maledata['waist'], bins=7, alpha=0.5, label='Male', kde=True)\nsns.histplot(femaledata['waist'], bins=7, alpha=0.5, label='Female', color='r', kde=True)\nplt.xlim(40,130)\nplt.xlabel('waist')\nplt.ylabel('count')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](10_seaborn_files/figure-html/cell-12-output-1.png){width=457 height=302}\n:::\n:::\n\n\n<br>\n\n## 10.4. 상자그림\n\n::: {#da011b1f .cell execution_count=12}\n``` {.python .cell-code}\n# 상자그림1 : 성별 및 음주 여부에 따른 몸무게 분포\nplt.figure(figsize=(8, 4))\nplt.title('Weight By Gender and Drinking')\nsns.boxplot(x='gender', y='weight', hue='drinking', width=0.7, gap = 0.1, data=data6)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](10_seaborn_files/figure-html/cell-13-output-1.png){width=668 height=376}\n:::\n:::\n\n\n::: {#ada7bee5 .cell execution_count=13}\n``` {.python .cell-code}\n# 상자그림2 : 성별 및 흡연 상태에 따른 몸무게 분포\nplt.figure(figsize=(8, 6))\nplt.title('Weight By Gender and Smoking')\nsns.boxplot(x='weight', y='gender', hue='smoking', width=0.7, gap=0.1, data=data6, orient='h')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](10_seaborn_files/figure-html/cell-14-output-1.png){width=654 height=523}\n:::\n:::\n\n\n<br>\n\n## 10.5. 카운트 플롯(count plot)\n- 범주형 변수의 각 항목별 빈도를 막대 그래프로 표현함\n- 데이터의 범주별 분포를 직관적으로 파악할 수 있음\n\n<br>\n\n::: {#84341b9e .cell execution_count=14}\n``` {.python .cell-code}\n# 카운트 플롯1 : 음주 여부에 따른 성별 분포\nplt.figure(figsize=(5, 3))\nplt.title('Gender and Drinking')\nsns.countplot(x='drinking', hue='gender', data=data6)\nplt.xlabel('')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](10_seaborn_files/figure-html/cell-15-output-1.png){width=453 height=283}\n:::\n:::\n\n\n::: {#3a13e0c9 .cell execution_count=15}\n``` {.python .cell-code}\n# 카운트 플롯2 : 흡연 상태에 따른 성별 분포\nplt.figure(figsize=(5, 3))\nplt.title('Gender and Smoking')\nsns.countplot(y='smoking', hue='gender',\n              data=data6, order=['Smoking', 'Quit-smoking', 'Non-smoking'])\nplt.ylabel('')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](10_seaborn_files/figure-html/cell-16-output-1.png){width=490 height=302}\n:::\n:::\n\n\n<br>\n\n## 10.6. 히트맵(heatmap)\n- 행과 열로 이루어진 2차원 행렬 데이터를 색상으로 시각화함\n- 두 범주형 변수 간의 관계나 상관관계를 나타낼 때 사용\n- 색상의 강도를 통해 값의 크기를 비교할 수 있음\n- (예) 상관행렬, 교차표 등\n\n<br>\n\n::: {#7449fd51 .cell execution_count=16}\n``` {.python .cell-code}\n# 8개 건강 지표 선택\ndata8 = data.copy()\ndata8 = data8.loc[:, ['height', 'weight', 'waist',\n                      'systolic', 'diastolic', 'cholesterol', 'HDL', 'LDL']]\n```\n:::\n\n\n::: {#16134223 .cell execution_count=17}\n``` {.python .cell-code}\n# 히트맵 : 8개의 건강 지표 간 상관관계\ncorrelation_data8 = data8.corr()\nupp_mat = np.triu(correlation_data8)\n\nplt.figure(figsize=(8, 6))\nplt.title('Correlation Heatmap')\nsns.heatmap(correlation_data8, annot=True, mask=upp_mat, cmap='seismic', vmin=-1, vmax=1)\nplt.xticks(rotation=45)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](10_seaborn_files/figure-html/cell-18-output-1.png){width=680 height=553}\n:::\n:::\n\n\n",
    "supporting": [
      "10_seaborn_files"
    ],
    "filters": [],
    "includes": {}
  }
}