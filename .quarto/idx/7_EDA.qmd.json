{"title":"7.1. 데이터 유형","markdown":{"yaml":{"jupyter":"python3"},"headingText":"7.1. 데이터 유형","containsRefs":false,"markdown":"\n\n<h1>7. 기술통계</h1>\n<br>\n\n+ 데이터의 특성에 따라 적용할 수 있는 분석 방법이나 시각화 기법이 달라지므로, 제일 먼저 변수의 유형을 파악해야 함\n\n<br>\n\n|구분|설명|예시|\n|:------:|:------------------|:------|\n|범주형 변수 <br>(categorical variable)|- 고정된 범주(집단) 중 하나의 값을 가지는 변수 <br>- 기본적으로 숫자로 표현할 수 없고, 대소 비교나 산술 연산이 적용되지 않음 <br>- 범주형 변수를 숫자로 표기했다고 해서 계산 가능한 수치형 변수가 되는 것은 아님|- 성별(남성, 여성) <br>- 종교(있음, 없음)|\n|수치형 변수 <br>(numerical variagle)|- 연산 가능한 수치 값을 가지는 변수 <br>- 대소 비교가 가능하고, 산술 연산이 가능함|- 키(cm) <br>- 몸무게(kg)|\n\n<br>\n\n## 7.2. 변수 요약\n### 7.2.1. 범주형 변수 요약\n+ 빈도표 : 하나의 범주형 변수의 분포를 파악하기 위해 범주별 빈도를 정리한 표\n+ 분할표 : 두 개의 범주형 변수의 분포를 파악하기 위해 한 변수의 범주는 행에, 다른 변수의 범주는 열에 배치하여 교차되는 칸에 해당 빈도를 정리한 표\n\n<br>\n\n```{python}\nimport numpy as np\nimport pandas as pd\n```\n\n```{python}\n## 실습 데이터 : tips 데이터셋\nimport seaborn as sns\ntips = sns.load_dataset('tips')\n```\n\n```{python}\n# total_bill: 식사 금액\n# tip: 팁 금액\n# sex: 성별\n# smoker: 흡연 여부\n# day: 요일\n# time: 식사 시간(Lunch, Dinner)\n# size: 식사 인원 수\nprint(tips.info())\n```\n\n```{python}\n# 빈도표1 : 요일별 주문 수\nprint(tips.value_counts('day'))\n```\n\n```{python}\n# 빈도표2 : 요일별 주문 비율\nprint(tips.value_counts('day', normalize=True))\n```\n\n```{python}\n# 빈도표3 : 요일별 주문 수 및 비율 (범주 순서 지정)\ndays = ['Thur', 'Fri', 'Sat', 'Sun']\ncat_type = pd.CategoricalDtype(categories=days, ordered=True)\ntips['day'] = tips['day'].astype(cat_type)\n\nfreqency = tips['day'].value_counts().sort_index()\nproportion = tips['day'].value_counts(normalize=True).sort_index()\n\nsummary = pd.DataFrame({'빈도': freqency, '비율': proportion})\nprint(summary)\n```\n\n```{python}\n# 교차표1 : 요일에 따른 식사 시간 빈도\nprint(pd.crosstab(tips['day'], tips['time']))\n```\n\n```{python}\n# 교차표2 : 요일에 따른 식사 시간 비율 (전체 %)\nprint(pd.crosstab(tips['day'], tips['time'], normalize=True))\n```\n\n```{python}\n# 교차표3 : 요일에 따른 식사 시간 비율 (행 기준 %)\nprint(pd.crosstab(tips['day'], tips['time'], normalize='index'))\n```\n\n```{python}\n# 교차표4 : 요일에 따른 식사 시간 비율 (열 기준 %)\nprint(pd.crosstab(tips['day'], tips['time'], normalize='columns'))\n```\n\n<br>\n\n### 7.2.2. 수치형 변수 요약\n+ 중심위치 : 자료를 하나의 숫자로 표현할 수 있는 값으로, 분포의 중심을 나타냄\n  + 평균(mean) : 모든 값을 더한 후 데이터 개수로 나눈 값으로, 이상값의 영향을 크게 받음\n  + 중앙값(median) : 데이터를 크기 순으로 정렬했을 때 중앙에 위치하는 값으로, 이상값의 영향을 거의 받지 않음\n\n<br>\n\n+ 산포도 : 데이터가 흩어져 있는 정도로, 중심위치의 대표성을 평가하는데 중요함\n  + 분산(variance) : 각 데이터가 평균과 얼마나 떨어져 있는지 제곱한 값들의 평균\n  + 표준편차(standard deviation) : 분산의 양의 제곱근으로, 평균과 단위가 같아 해석이 용이함\n  + 산포도가 작으면 데이터들이 중심위치에 모여 있다는 것을 의미함\n\n<br>\n\n+ 사분위수(quartiles) : 데이터를 4등분하는 값\n  + 최소값\n  + 1사분위수(Q₁) : 데이터의 25% 순서에 있는 값\n  + 중앙값\n  + 3사분위수(Q₃) : 데이터의 75% 순서에 있는 값\n  + 최대값\n+ 사분위수범위(IQR) : Q₃ - Q₁으로, 중앙값에 대한 산포도를 나타냄\n\n<br>\n\n![](./images/fig7-1.gif)\n\n<br>\n\n+ 분포의 모양\n  + 왜도(skewness)\n    + 데이터의 비대칭 정도를 나타냄\n    + 0이면 대칭, 음수이면 왼쪽으로 꼬리가 긴 분포(skewed to left), 양수이면 오른쪽으로 꼬리가 긴 분포(skewed to right)임\n  + 첨도(kurtosis)\n    + 데이터가 중심위치에 얼마나 모여 있는가를 나타냄\n    + 0이면 정규분포와 유사, 양수이면 중심에 많이 모여 있음(뾰족함), 음수이면 넓게 퍼져있음(완만함)\n    + \\[참고\\]) Python은 초과 첨도를 기준으로 하여, 정규분포를 0으로 간주함\n\n<br>\n\n```{python}\nfrom scipy import stats\n```\n\n```{python}\n# 요약 통계1 : 식사 금액 분포 \nprint(tips['total_bill'].describe())\n```\n\n```{python}\n# 요약 통계2 : 팁 금액 분포\nsummary = stats.describe(tips['tip'])\nprint(f'nobs: {summary.nobs}')\nprint(f'min-max: {summary.minmax}')\nprint(f'mean: {summary.mean:.2f}')\nprint(f'variance: {summary.variance:.2f}')\nprint(f'skewness: {summary.skewness:.2f}')\nprint(f'kurtosis: {summary.kurtosis:.2f}')\n```\n\n<br>\n\n## 7.3. 변수 간 관계\n### 7.3.1. 집단별 비교\n+ 집단별로 수치형 변수의 분포(평균, 중앙값, 표준편차, 사분위수 등)를 비교함으로써 집단 간 차이를 파악할 수 있음\n\n<br>\n\n```{python}\n# 흡연 여부별 팁 금액 분포\nprint(tips.groupby('smoker', observed=True)['total_bill'].describe())\n```\n\n<br>\n\n### 7.3.2. 상관관계\n+ 상관관계(correlation)\n  + 두 수치형 변수 간 선형적인 관계(linear relationship)를 나타냄\n  + 상관계수(correlation coefficient)\n    + 두 변수 간 상관관계를 수치로 나타낸 지표\n    + 변수 측정 단위의 영향을 받지 않음\n\n<br>\n\n+ 상관계수의 성질\n  + 상관계수 r은 항상 -1에서 +1 사이의 값을 가짐\n  + 절대값 |r|은 선형성의 강도를 나타내며, 1에 가까울수록 강한 상관관계를 의미함\n  + 부호는 선형 관계의 방향을 나타냄\n    + r > 0 : 양의 상관관계(한 변수가 증가할 때 다른 변수도 증가)\n    + r < 0 : 음의 상관관계(한 변수가 증가할 때 다른 변수는 감소)\n    + r ≈ 0 : 상관관계 없음(한 변수가 증가할 때 다른 변수는 영향을 받지 않음)\n\n<br>\n\n![](./images/fig7-2.jpg){width=70%}\n\n<br>\n\n```{python}\n# 상관관계1 : 식사 금액과 팁 금액 간 상관계수\nfrom scipy.stats import pearsonr\nr, p = pearsonr(tips['total_bill'], tips['tip'])\nprint(f'상관계수: {r:.2f}, p-value: {p:.3f}')\n```\n\n```{python}\n# 상관관계2 : 식사 금액, 식사 인원 수와 팁 금액 간 상관계수\ntips[['total_bill', 'size', 'tip']].corr()\n```\n\n<br>\n\n## 7.4. 결측값 처리\n+ 결측값(missing value)\n  + Python에서는 누락된 데이터를 `NaN`(Not a Number)로 표기하며, 연산 시 자동으로 제외함\n  + 데이터프레임에서 `isna()`, `isnull()` 메소드를 이용하면 결측값을 확인할 수 있음\n\n<br>\n\n+ 결측값 처리 방법\n  + 가장 단순한 방법은 `dropna()` 메소드를 이용하여 결측값이 포함된 행이나 열을 삭제하는 것임\n    + `axis=0`이면 행, `axis=1`이면 열을 삭제함\n  + `fillna()` 메소드를 이용하여 결측값을 최빈값이나 평균, 중앙값으로 대체할 수도 있음\n\n<br>\n\n```{python}\n## 실습 데이터 : titanic\ntitanic = sns.load_dataset('titanic')\n```\n\n```{python}\n# survived: 생존 여부(0, 1)\n# pclass: 객실 등급(1, 2, 3)\n# sex: 성별\n# age: 나이\n# sibsp: 함께 탑승한 형제자매, 배우자 수\n# parch: 함께 탑승한 부모, 자식 수\n# fare: 요금\n# embarked: 탑승 항구(S, C, Q)\n# class: 객실 등급(First, Second, Third)\n# who: 사람 구분(man, woman, child)\n# adult_male: 성인 남자 여부(True, False)\n# deck: 갑판\n# embark_town: 탑승 항구(Southhampton, Cherbourg, Queenstown)\n# alive: 생존여부(no, yes)\n# alone: 1인 탑승 여부(True, False)\ntitanic.info()\n```\n\n```{python}\n# 결측값 확인\ntitanic[titanic['embarked'].isna()]\n```\n\n```{python}\n# 각 열별 결측값 개수 확인\n# 부울형은 산술 연산 시 True는 1, False는 0으로 계산되므로\n# isna() 결과에 sum()을 적용하면 결측값 개수가 계산됨\ntitanic.isna().sum()\n```\n\n```{python}\n# 결측값이 많이 포함된 열 삭제\ntitanic.drop('deck', axis=1, inplace=True)\ntitanic.columns\n```\n\n```{python}\n# age 변수를 제외한 변수들 중 결측값이 하나라도 포함된 행 삭제\ncols = titanic.columns.difference(['age'])\ntitanic_new = titanic.dropna(subset=cols, how='any')\ntitanic_new.isna().sum()\n```\n\n```{python}\n# 결측값을 최빈값으로 대체\nmode = titanic['embarked'].mode()[0]\ntitanic['embarked'] = titanic['embarked'].fillna(mode)\ntitanic.isna().sum()\n```\n\n```{python}\n# 결측값을 중앙값으로 대체\nmedian = titanic.groupby(['sex', 'who'])['age'].transform('median')\ntitanic['age'] = titanic['age'].fillna(median)\ntitanic.isna().sum()\n```\n\n<br>\n\n## 7.5. 이상값 처리\n+ 이상값(outlier)\n  + 정상적인 데이터 분포에서 벗어나 극단적으로 크거나 작은 값\n  + 데이터 분석과 모델링 과정에서 결과에 큰 영향을 미칠 수 있음\n\n<br>\n\n+ 이상값 탐지 방법\n  + 사분위수범위(IQR) 활용 : (Q₁-1.5×IQR, Q₃+1.5×IQR) 범위를 벗어나는 값을 이상값으로 판단\n  + 표준점수(Z-score) 활용 : 분포가 대칭일때, 일반적으로 |Z|>3인 값을 이상값으로 판단\n\n<br>\n\n+ 이상값 처리 방법\n  + 이상값이 소수이고 데이터 손실이 크지 않다면 해당 데이터를 삭제\n  + 평균, 중앙값 등 적절한 값으로 대체 가능\n  + 로그 변환, 제곱근 변환 등 데이터 변환 기법 활용\n\n<br>\n\n```{python}\n# 이상값 확인 및 삭제1 : 사분위수 범위(IQR) 활용\ndef iqr_outlier(data, column):\n    col_data = data[column].dropna()\n    Q1 = col_data.quantile(0.25)\n    Q3 = col_data.quantile(0.75)\n    IQR = Q3 - Q1\n    lower_bound = Q1 - 1.5 * IQR\n    upper_bound = Q3 + 1.5 * IQR\n    outliers = data[(data[column] < lower_bound) | (data[column] > upper_bound)]\n    return outliers\n\nfor column in titanic.select_dtypes(include='number').columns:\n    outlier = iqr_outlier(titanic, column)\n    print(f'{column} 변수의 이상값 개수: {len(outlier)}')\n```\n\n```{python}\n# 이상값 확인 및 삭제2 : Z-score 활용\ndef z_outlier(df, c, t=3):\n    from scipy.stats import zscore\n    z = zscore(df[c].dropna())\n    return df.loc[df[c].dropna().index[(abs(z) > t)]]\n    \nfor column in titanic.select_dtypes(include='number').columns:\n    outlier = z_outlier(titanic, column)\n    print(f'{column} 변수의 이상값 개수: {len(outlier)}')\n```\n\n```{python}\n# [참고] 변수 분포의 왜도를 확인하고, 적절한 이상값 탐지 방법(IQR, Z-score)을 선택\nfor column in titanic.select_dtypes(include='number').columns:\n    print(f'{column} 변수의 왜도: {stats.skew(titanic[column]):.3f}')\n```\n\n","srcMarkdownNoYaml":"\n\n<h1>7. 기술통계</h1>\n<br>\n\n## 7.1. 데이터 유형\n+ 데이터의 특성에 따라 적용할 수 있는 분석 방법이나 시각화 기법이 달라지므로, 제일 먼저 변수의 유형을 파악해야 함\n\n<br>\n\n|구분|설명|예시|\n|:------:|:------------------|:------|\n|범주형 변수 <br>(categorical variable)|- 고정된 범주(집단) 중 하나의 값을 가지는 변수 <br>- 기본적으로 숫자로 표현할 수 없고, 대소 비교나 산술 연산이 적용되지 않음 <br>- 범주형 변수를 숫자로 표기했다고 해서 계산 가능한 수치형 변수가 되는 것은 아님|- 성별(남성, 여성) <br>- 종교(있음, 없음)|\n|수치형 변수 <br>(numerical variagle)|- 연산 가능한 수치 값을 가지는 변수 <br>- 대소 비교가 가능하고, 산술 연산이 가능함|- 키(cm) <br>- 몸무게(kg)|\n\n<br>\n\n## 7.2. 변수 요약\n### 7.2.1. 범주형 변수 요약\n+ 빈도표 : 하나의 범주형 변수의 분포를 파악하기 위해 범주별 빈도를 정리한 표\n+ 분할표 : 두 개의 범주형 변수의 분포를 파악하기 위해 한 변수의 범주는 행에, 다른 변수의 범주는 열에 배치하여 교차되는 칸에 해당 빈도를 정리한 표\n\n<br>\n\n```{python}\nimport numpy as np\nimport pandas as pd\n```\n\n```{python}\n## 실습 데이터 : tips 데이터셋\nimport seaborn as sns\ntips = sns.load_dataset('tips')\n```\n\n```{python}\n# total_bill: 식사 금액\n# tip: 팁 금액\n# sex: 성별\n# smoker: 흡연 여부\n# day: 요일\n# time: 식사 시간(Lunch, Dinner)\n# size: 식사 인원 수\nprint(tips.info())\n```\n\n```{python}\n# 빈도표1 : 요일별 주문 수\nprint(tips.value_counts('day'))\n```\n\n```{python}\n# 빈도표2 : 요일별 주문 비율\nprint(tips.value_counts('day', normalize=True))\n```\n\n```{python}\n# 빈도표3 : 요일별 주문 수 및 비율 (범주 순서 지정)\ndays = ['Thur', 'Fri', 'Sat', 'Sun']\ncat_type = pd.CategoricalDtype(categories=days, ordered=True)\ntips['day'] = tips['day'].astype(cat_type)\n\nfreqency = tips['day'].value_counts().sort_index()\nproportion = tips['day'].value_counts(normalize=True).sort_index()\n\nsummary = pd.DataFrame({'빈도': freqency, '비율': proportion})\nprint(summary)\n```\n\n```{python}\n# 교차표1 : 요일에 따른 식사 시간 빈도\nprint(pd.crosstab(tips['day'], tips['time']))\n```\n\n```{python}\n# 교차표2 : 요일에 따른 식사 시간 비율 (전체 %)\nprint(pd.crosstab(tips['day'], tips['time'], normalize=True))\n```\n\n```{python}\n# 교차표3 : 요일에 따른 식사 시간 비율 (행 기준 %)\nprint(pd.crosstab(tips['day'], tips['time'], normalize='index'))\n```\n\n```{python}\n# 교차표4 : 요일에 따른 식사 시간 비율 (열 기준 %)\nprint(pd.crosstab(tips['day'], tips['time'], normalize='columns'))\n```\n\n<br>\n\n### 7.2.2. 수치형 변수 요약\n+ 중심위치 : 자료를 하나의 숫자로 표현할 수 있는 값으로, 분포의 중심을 나타냄\n  + 평균(mean) : 모든 값을 더한 후 데이터 개수로 나눈 값으로, 이상값의 영향을 크게 받음\n  + 중앙값(median) : 데이터를 크기 순으로 정렬했을 때 중앙에 위치하는 값으로, 이상값의 영향을 거의 받지 않음\n\n<br>\n\n+ 산포도 : 데이터가 흩어져 있는 정도로, 중심위치의 대표성을 평가하는데 중요함\n  + 분산(variance) : 각 데이터가 평균과 얼마나 떨어져 있는지 제곱한 값들의 평균\n  + 표준편차(standard deviation) : 분산의 양의 제곱근으로, 평균과 단위가 같아 해석이 용이함\n  + 산포도가 작으면 데이터들이 중심위치에 모여 있다는 것을 의미함\n\n<br>\n\n+ 사분위수(quartiles) : 데이터를 4등분하는 값\n  + 최소값\n  + 1사분위수(Q₁) : 데이터의 25% 순서에 있는 값\n  + 중앙값\n  + 3사분위수(Q₃) : 데이터의 75% 순서에 있는 값\n  + 최대값\n+ 사분위수범위(IQR) : Q₃ - Q₁으로, 중앙값에 대한 산포도를 나타냄\n\n<br>\n\n![](./images/fig7-1.gif)\n\n<br>\n\n+ 분포의 모양\n  + 왜도(skewness)\n    + 데이터의 비대칭 정도를 나타냄\n    + 0이면 대칭, 음수이면 왼쪽으로 꼬리가 긴 분포(skewed to left), 양수이면 오른쪽으로 꼬리가 긴 분포(skewed to right)임\n  + 첨도(kurtosis)\n    + 데이터가 중심위치에 얼마나 모여 있는가를 나타냄\n    + 0이면 정규분포와 유사, 양수이면 중심에 많이 모여 있음(뾰족함), 음수이면 넓게 퍼져있음(완만함)\n    + \\[참고\\]) Python은 초과 첨도를 기준으로 하여, 정규분포를 0으로 간주함\n\n<br>\n\n```{python}\nfrom scipy import stats\n```\n\n```{python}\n# 요약 통계1 : 식사 금액 분포 \nprint(tips['total_bill'].describe())\n```\n\n```{python}\n# 요약 통계2 : 팁 금액 분포\nsummary = stats.describe(tips['tip'])\nprint(f'nobs: {summary.nobs}')\nprint(f'min-max: {summary.minmax}')\nprint(f'mean: {summary.mean:.2f}')\nprint(f'variance: {summary.variance:.2f}')\nprint(f'skewness: {summary.skewness:.2f}')\nprint(f'kurtosis: {summary.kurtosis:.2f}')\n```\n\n<br>\n\n## 7.3. 변수 간 관계\n### 7.3.1. 집단별 비교\n+ 집단별로 수치형 변수의 분포(평균, 중앙값, 표준편차, 사분위수 등)를 비교함으로써 집단 간 차이를 파악할 수 있음\n\n<br>\n\n```{python}\n# 흡연 여부별 팁 금액 분포\nprint(tips.groupby('smoker', observed=True)['total_bill'].describe())\n```\n\n<br>\n\n### 7.3.2. 상관관계\n+ 상관관계(correlation)\n  + 두 수치형 변수 간 선형적인 관계(linear relationship)를 나타냄\n  + 상관계수(correlation coefficient)\n    + 두 변수 간 상관관계를 수치로 나타낸 지표\n    + 변수 측정 단위의 영향을 받지 않음\n\n<br>\n\n+ 상관계수의 성질\n  + 상관계수 r은 항상 -1에서 +1 사이의 값을 가짐\n  + 절대값 |r|은 선형성의 강도를 나타내며, 1에 가까울수록 강한 상관관계를 의미함\n  + 부호는 선형 관계의 방향을 나타냄\n    + r > 0 : 양의 상관관계(한 변수가 증가할 때 다른 변수도 증가)\n    + r < 0 : 음의 상관관계(한 변수가 증가할 때 다른 변수는 감소)\n    + r ≈ 0 : 상관관계 없음(한 변수가 증가할 때 다른 변수는 영향을 받지 않음)\n\n<br>\n\n![](./images/fig7-2.jpg){width=70%}\n\n<br>\n\n```{python}\n# 상관관계1 : 식사 금액과 팁 금액 간 상관계수\nfrom scipy.stats import pearsonr\nr, p = pearsonr(tips['total_bill'], tips['tip'])\nprint(f'상관계수: {r:.2f}, p-value: {p:.3f}')\n```\n\n```{python}\n# 상관관계2 : 식사 금액, 식사 인원 수와 팁 금액 간 상관계수\ntips[['total_bill', 'size', 'tip']].corr()\n```\n\n<br>\n\n## 7.4. 결측값 처리\n+ 결측값(missing value)\n  + Python에서는 누락된 데이터를 `NaN`(Not a Number)로 표기하며, 연산 시 자동으로 제외함\n  + 데이터프레임에서 `isna()`, `isnull()` 메소드를 이용하면 결측값을 확인할 수 있음\n\n<br>\n\n+ 결측값 처리 방법\n  + 가장 단순한 방법은 `dropna()` 메소드를 이용하여 결측값이 포함된 행이나 열을 삭제하는 것임\n    + `axis=0`이면 행, `axis=1`이면 열을 삭제함\n  + `fillna()` 메소드를 이용하여 결측값을 최빈값이나 평균, 중앙값으로 대체할 수도 있음\n\n<br>\n\n```{python}\n## 실습 데이터 : titanic\ntitanic = sns.load_dataset('titanic')\n```\n\n```{python}\n# survived: 생존 여부(0, 1)\n# pclass: 객실 등급(1, 2, 3)\n# sex: 성별\n# age: 나이\n# sibsp: 함께 탑승한 형제자매, 배우자 수\n# parch: 함께 탑승한 부모, 자식 수\n# fare: 요금\n# embarked: 탑승 항구(S, C, Q)\n# class: 객실 등급(First, Second, Third)\n# who: 사람 구분(man, woman, child)\n# adult_male: 성인 남자 여부(True, False)\n# deck: 갑판\n# embark_town: 탑승 항구(Southhampton, Cherbourg, Queenstown)\n# alive: 생존여부(no, yes)\n# alone: 1인 탑승 여부(True, False)\ntitanic.info()\n```\n\n```{python}\n# 결측값 확인\ntitanic[titanic['embarked'].isna()]\n```\n\n```{python}\n# 각 열별 결측값 개수 확인\n# 부울형은 산술 연산 시 True는 1, False는 0으로 계산되므로\n# isna() 결과에 sum()을 적용하면 결측값 개수가 계산됨\ntitanic.isna().sum()\n```\n\n```{python}\n# 결측값이 많이 포함된 열 삭제\ntitanic.drop('deck', axis=1, inplace=True)\ntitanic.columns\n```\n\n```{python}\n# age 변수를 제외한 변수들 중 결측값이 하나라도 포함된 행 삭제\ncols = titanic.columns.difference(['age'])\ntitanic_new = titanic.dropna(subset=cols, how='any')\ntitanic_new.isna().sum()\n```\n\n```{python}\n# 결측값을 최빈값으로 대체\nmode = titanic['embarked'].mode()[0]\ntitanic['embarked'] = titanic['embarked'].fillna(mode)\ntitanic.isna().sum()\n```\n\n```{python}\n# 결측값을 중앙값으로 대체\nmedian = titanic.groupby(['sex', 'who'])['age'].transform('median')\ntitanic['age'] = titanic['age'].fillna(median)\ntitanic.isna().sum()\n```\n\n<br>\n\n## 7.5. 이상값 처리\n+ 이상값(outlier)\n  + 정상적인 데이터 분포에서 벗어나 극단적으로 크거나 작은 값\n  + 데이터 분석과 모델링 과정에서 결과에 큰 영향을 미칠 수 있음\n\n<br>\n\n+ 이상값 탐지 방법\n  + 사분위수범위(IQR) 활용 : (Q₁-1.5×IQR, Q₃+1.5×IQR) 범위를 벗어나는 값을 이상값으로 판단\n  + 표준점수(Z-score) 활용 : 분포가 대칭일때, 일반적으로 |Z|>3인 값을 이상값으로 판단\n\n<br>\n\n+ 이상값 처리 방법\n  + 이상값이 소수이고 데이터 손실이 크지 않다면 해당 데이터를 삭제\n  + 평균, 중앙값 등 적절한 값으로 대체 가능\n  + 로그 변환, 제곱근 변환 등 데이터 변환 기법 활용\n\n<br>\n\n```{python}\n# 이상값 확인 및 삭제1 : 사분위수 범위(IQR) 활용\ndef iqr_outlier(data, column):\n    col_data = data[column].dropna()\n    Q1 = col_data.quantile(0.25)\n    Q3 = col_data.quantile(0.75)\n    IQR = Q3 - Q1\n    lower_bound = Q1 - 1.5 * IQR\n    upper_bound = Q3 + 1.5 * IQR\n    outliers = data[(data[column] < lower_bound) | (data[column] > upper_bound)]\n    return outliers\n\nfor column in titanic.select_dtypes(include='number').columns:\n    outlier = iqr_outlier(titanic, column)\n    print(f'{column} 변수의 이상값 개수: {len(outlier)}')\n```\n\n```{python}\n# 이상값 확인 및 삭제2 : Z-score 활용\ndef z_outlier(df, c, t=3):\n    from scipy.stats import zscore\n    z = zscore(df[c].dropna())\n    return df.loc[df[c].dropna().index[(abs(z) > t)]]\n    \nfor column in titanic.select_dtypes(include='number').columns:\n    outlier = z_outlier(titanic, column)\n    print(f'{column} 변수의 이상값 개수: {len(outlier)}')\n```\n\n```{python}\n# [참고] 변수 분포의 왜도를 확인하고, 적절한 이상값 탐지 방법(IQR, Z-score)을 선택\nfor column in titanic.select_dtypes(include='number').columns:\n    print(f'{column} 변수의 왜도: {stats.skew(titanic[column]):.3f}')\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"7_EDA.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","theme":["simplex"],"toc-location":"right","toc-expand":true,"jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}